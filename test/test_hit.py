# coding: utf-8

"""
    Consumer Complaint Database API

    The API for searching the Consumer Complaint Database

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.hit import Hit

class TestHit(unittest.TestCase):
    """Hit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Hit:
        """Test Hit
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Hit`
        """
        model = Hit()
        if include_optional:
            return Hit(
                source = openapi_client.models.complaint.Complaint(
                    company = '', 
                    company_public_response = '', 
                    company_response = '', 
                    complaint_id = 56, 
                    complaint_what_happened = '', 
                    consumer_consent_provided = '', 
                    consumer_disputed = '', 
                    date_received = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    date_sent_to_company = '', 
                    has_narrative = True, 
                    issue = '', 
                    product = '', 
                    state = '', 
                    sub_issue = '', 
                    sub_product = '', 
                    submitted_via = '', 
                    tags = '', 
                    timely = '', 
                    zip_code = '', )
            )
        else:
            return Hit(
        )
        """

    def testHit(self):
        """Test Hit"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
