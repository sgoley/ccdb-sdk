# coding: utf-8

"""
    Consumer Complaint Database API

    The API for searching the Consumer Complaint Database

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ccdb_sdk.models.complaint import Complaint

class TestComplaint(unittest.TestCase):
    """Complaint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Complaint:
        """Test Complaint
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Complaint`
        """
        model = Complaint()
        if include_optional:
            return Complaint(
                company = '',
                company_public_response = '',
                company_response = '',
                complaint_id = 56,
                complaint_what_happened = '',
                consumer_consent_provided = '',
                consumer_disputed = '',
                date_received = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                date_sent_to_company = '',
                has_narrative = True,
                issue = '',
                product = '',
                state = '',
                sub_issue = '',
                sub_product = '',
                submitted_via = '',
                tags = '',
                timely = '',
                zip_code = ''
            )
        else:
            return Complaint(
        )
        """

    def testComplaint(self):
        """Test Complaint"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
