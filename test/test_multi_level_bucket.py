# coding: utf-8

"""
    Consumer Complaint Database API

    The API for searching the Consumer Complaint Database

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.multi_level_bucket import MultiLevelBucket

class TestMultiLevelBucket(unittest.TestCase):
    """MultiLevelBucket unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MultiLevelBucket:
        """Test MultiLevelBucket
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MultiLevelBucket`
        """
        model = MultiLevelBucket()
        if include_optional:
            return MultiLevelBucket(
                doc_count = 56,
                field_raw = openapi_client.models.multi_level_bucket_field_raw.MultiLevelBucket_field_raw(
                    buckets = [
                        openapi_client.models.aggregation.Aggregation(
                            doc_count = 56, 
                            field = openapi_client.models.aggregation_field.Aggregation_field(
                                doc_count_error_upper_bound = 56, 
                                sum_other_doc_count = 56, ), )
                        ], ),
                key = ''
            )
        else:
            return MultiLevelBucket(
        )
        """

    def testMultiLevelBucket(self):
        """Test MultiLevelBucket"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
