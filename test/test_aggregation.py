# coding: utf-8

"""
    Consumer Complaint Database API

    The API for searching the Consumer Complaint Database

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ccdb_sdk.models.aggregation import Aggregation

class TestAggregation(unittest.TestCase):
    """Aggregation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Aggregation:
        """Test Aggregation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Aggregation`
        """
        model = Aggregation()
        if include_optional:
            return Aggregation(
                doc_count = 56,
                var_field = ccdb_sdk.models.aggregation_field.Aggregation_field(
                    buckets = [
                        ccdb_sdk.models.bucket.Bucket(
                            doc_count = 56, 
                            key = '', )
                        ], 
                    doc_count_error_upper_bound = 56, 
                    sum_other_doc_count = 56, )
            )
        else:
            return Aggregation(
        )
        """

    def testAggregation(self):
        """Test Aggregation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
